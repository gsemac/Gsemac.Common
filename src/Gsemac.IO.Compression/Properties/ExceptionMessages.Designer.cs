//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Gsemac.IO.Compression.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ExceptionMessages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ExceptionMessages() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Gsemac.IO.Compression.Properties.ExceptionMessages", typeof(ExceptionMessages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Archive does not support reading the compression level..
        /// </summary>
        internal static string ArchiveDoesNotSupportGettingCompressionLevel {
            get {
                return ResourceManager.GetString("ArchiveDoesNotSupportGettingCompressionLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Archive does not support reading archive-level comments..
        /// </summary>
        internal static string ArchiveDoesNotSupportReadingComments {
            get {
                return ResourceManager.GetString("ArchiveDoesNotSupportReadingComments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Archive does not support setting the compression level..
        /// </summary>
        internal static string ArchiveDoesNotSupportSettingCompressionLevel {
            get {
                return ResourceManager.GetString("ArchiveDoesNotSupportSettingCompressionLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Write access is not supported for this archive..
        /// </summary>
        internal static string ArchiveDoesNotSupportWriting {
            get {
                return ResourceManager.GetString("ArchiveDoesNotSupportWriting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Archive does not support writing archive-level comments..
        /// </summary>
        internal static string ArchiveDoesNotSupportWritingComments {
            get {
                return ResourceManager.GetString("ArchiveDoesNotSupportWritingComments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The archive is read-only..
        /// </summary>
        internal static string ArchiveIsReadOnly {
            get {
                return ResourceManager.GetString("ArchiveIsReadOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The archive is write-only..
        /// </summary>
        internal static string ArchiveIsWriteOnly {
            get {
                return ResourceManager.GetString("ArchiveIsWriteOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This archive implementation can only be used with FileStream instances..
        /// </summary>
        internal static string ArchiveOnlySupportsFileStreams {
            get {
                return ResourceManager.GetString("ArchiveOnlySupportsFileStreams", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;7z.exe&apos; was not found..
        /// </summary>
        internal static string SevenZipExecutableNotFound {
            get {
                return ResourceManager.GetString("SevenZipExecutableNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;UnRAR.exe&apos; was not found..
        /// </summary>
        internal static string UnrarExecutableNotFound {
            get {
                return ResourceManager.GetString("UnrarExecutableNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;Rar.exe&apos; was not found..
        /// </summary>
        internal static string WinrarExecutableNotFound {
            get {
                return ResourceManager.GetString("WinrarExecutableNotFound", resourceCulture);
            }
        }
    }
}
